[{"path":"https://idem-lab.github.io/sdmtools/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Gerry Ryan, David Duncan Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://idem-lab.github.io/sdmtools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Gerry Ryan. Author, maintainer. David Duncan. Contributor. Nick Tierney. Contributor.","code":""},{"path":"https://idem-lab.github.io/sdmtools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ryan G (2024). sdmtools: Utility tools Species Distribution Modelling. R package version 0.0.0.9000, https://idem-lab.github.io/sdmtools/, https://github.com/idem-lab/sdmtools.","code":"@Manual{,   title = {sdmtools: Utility tools for Species Distribution Modelling},   author = {Gerry Ryan},   year = {2024},   note = {R package version 0.0.0.9000, https://idem-lab.github.io/sdmtools/},   url = {https://github.com/idem-lab/sdmtools}, }"},{"path":"https://idem-lab.github.io/sdmtools/index.html","id":"sdmtools","dir":"","previous_headings":"","what":"Utility tools for Species Distribution Modelling","title":"Utility tools for Species Distribution Modelling","text":"set helper functions facilitate species distribution modelling.","code":""},{"path":"https://idem-lab.github.io/sdmtools/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Utility tools for Species Distribution Modelling","text":"can install sdmtools :","code":"install.packages( \"sdmtools\", repos = \"https://idem-lab.r-universe.dev\" )"},{"path":"https://idem-lab.github.io/sdmtools/index.html","id":"data","dir":"","previous_headings":"","what":"Data","title":"Utility tools for Species Distribution Modelling","text":"raster_to_terra — annotated equivalence table functions raster terra. First 5 lines: global_regions — tibble showing region, UN region, continent 249 countries country-like things. First 5 lines:","code":"library(sdmtools)"},{"path":"https://idem-lab.github.io/sdmtools/index.html","id":"data-generating-functions","dir":"","previous_headings":"Data","what":"Data-generating functions","title":"Utility tools for Species Distribution Modelling","text":"package terra fiddly storing spat... objects packages, chose generate example spatial data -demand using functions, rather storing . example_raster — example spatRaster.  example_vector — example spatVector.  make_africa_mask — makes mask layer Africa based shapefiles malariaAtlas::getShp. Can produce either SpatRaster SpatVector.","code":"library(terra) #> terra 1.8.5 r <- example_raster() r #> class       : SpatRaster  #> dimensions  : 10, 10, 1  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 0, 10, 0, 10  (xmin, xmax, ymin, ymax) #> coord. ref. :   #> source(s)   : memory #> name        :   example  #> min value   : 0.0627102  #> max value   : 7.3352526 plot(r) library(terra) v <- example_vector() v #>  class       : SpatVector  #>  geometry    : points  #>  dimensions  : 10, 0  (geometries, attributes) #>  extent      : 0.2293562, 8.00672, 1.375653, 8.951683  (xmin, xmax, ymin, ymax) #>  coord. ref. : plot(v) library(terra) africa_mask <- make_africa_mask(type = \"vector\") #> Loading ISO 19139 XML schemas... #> Loading ISO 19115 codelists... #> Please Note: Because you did not provide a version, by default the version being used is 202403 (This is the most recent version of admin unit shape data. To see other version options use function listShpVersions) #> Start tag expected, '<' not found #> Start tag expected, '<' not found #> although coordinates are longitude/latitude, st_union assumes that they are #> planar #> Warning: [crs<-] not all geometries were transferred, use svc for a geometry #> collection plot(africa_mask)"},{"path":"https://idem-lab.github.io/sdmtools/index.html","id":"function-examples","dir":"","previous_headings":"","what":"Function examples","title":"Utility tools for Species Distribution Modelling","text":"rastpointplot — simple utility plot raster points .  source_R — source R files target directory import_rasts — import rasters directory single object split_rast — split raster.","code":"rastpointplot(r,v) source_R(\"/Users/frankenstein/project/R\") # do not run rasters <- import_rasts(\"/data/grids/covariates\") # do not run r <- example_raster()  s <- split_rast(r, grain = 2)  s #> [[1]] #> class       : SpatRaster  #> dimensions  : 5, 5, 1  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 0, 5, 0, 5  (xmin, xmax, ymin, ymax) #> coord. ref. :   #> source(s)   : memory #> name        :   example  #> min value   : 0.1587361  #> max value   : 7.3352526  #>  #> [[2]] #> class       : SpatRaster  #> dimensions  : 5, 5, 1  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 0, 5, 5, 10  (xmin, xmax, ymin, ymax) #> coord. ref. :   #> source(s)   : memory #> name        :   example  #> min value   : 0.1028045  #> max value   : 4.0001839  #>  #> [[3]] #> class       : SpatRaster  #> dimensions  : 5, 5, 1  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 5, 10, 0, 5  (xmin, xmax, ymin, ymax) #> coord. ref. :   #> source(s)   : memory #> name        :    example  #> min value   : 0.09802478  #> max value   : 3.23820739  #>  #> [[4]] #> class       : SpatRaster  #> dimensions  : 5, 5, 1  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 5, 10, 5, 10  (xmin, xmax, ymin, ymax) #> coord. ref. :   #> source(s)   : memory #> name        :   example  #> min value   : 0.0627102  #> max value   : 5.7145289 ps <- lapply(   s,   FUN = extend,   y = r ) |>   rast()  c(   r,   ps ) |>   plot()"},{"path":"https://idem-lab.github.io/sdmtools/index.html","id":"functions-for-a-species-distribution-modelling-workflow","dir":"","previous_headings":"Function examples","what":"Functions for a species distribution modelling workflow","title":"Utility tools for Species Distribution Modelling","text":"covariate layers: cov1 cov2 std_rast — standardise spatRaster transforming range 0—1  presences absences extract_covariates — extract covariate values spatRaster raster layers given set points Pass either presences absences data.frame tibble , presences_and_absences single data frame points presence ID column(s) can make spatial prediction model using predict_sdm write read single step writereadrast, write temporary file temptif:","code":"library(terra)  cov1 <- example_raster(   seed = -44,   layername = \"cov1\" ) cov2 <- example_raster(   seed = 15.3,   layername = \"cov2\" )  covs <- c(cov1, cov2) cov1_st <- std_rast(cov1)  plot(cov1_st) presences <- example_vector(seed = 68) %>%   as.data.frame(geom = \"xy\") absences <- example_vector(seed = 9.6) %>%   as.data.frame(geom = \"xy\")  presences #>           x        y #> 1  9.244899 5.033042 #> 2  6.612025 1.559797 #> 3  4.024099 8.750261 #> 4  6.370063 4.438317 #> 5  3.526324 6.598762 #> 6  7.476441 7.754586 #> 7  7.175489 8.123659 #> 8  1.935898 5.082858 #> 9  3.331217 7.974853 #> 10 1.365547 5.741829 sdm_data <- extract_covariates(   covariates = covs,   presences = presences,   absences = absences ) # first we make a simple model, using data from above m <- glm(presence ~ cov1 + cov2, data = sdm_data)  prediction_rast <- predict_sdm(m, covs) |>   writereadrast(filename = temptif())  plot(prediction_rast)"},{"path":"https://idem-lab.github.io/sdmtools/reference/assign_nearest_land.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign to nearest raster cell on mask — assign_nearest_land","title":"Assign to nearest raster cell on mask — assign_nearest_land","text":"Adapted seegSDM. Reposition point observations location within mask within specified distance. Useful coastal observations drop jagged mask similar","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/assign_nearest_land.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign to nearest raster cell on mask — assign_nearest_land","text":"","code":"assign_nearest_land(dat_object, mask_object, max_distance, verbose = TRUE)"},{"path":"https://idem-lab.github.io/sdmtools/reference/assign_nearest_land.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign to nearest raster cell on mask — assign_nearest_land","text":"dat_object data.frame mask_object 'SpatRaster' max_distance map units raster projected verbose provide verbose output. Default TRUE","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/assign_nearest_land.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign to nearest raster cell on mask — assign_nearest_land","text":"modified data object minus observations within specified maximum distance mask","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/example_mask.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an example mask within a given raster — example_mask","title":"Create an example mask within a given raster — example_mask","text":"Create example mask within given raster","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/example_mask.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an example mask within a given raster — example_mask","text":"","code":"example_mask(raster, pc_threshold = NULL)"},{"path":"https://idem-lab.github.io/sdmtools/reference/example_mask.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an example mask within a given raster — example_mask","text":"raster generated example_raster example pc_threshold threshold percentile divide mask / non mask elements","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/example_mask.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an example mask within a given raster — example_mask","text":"spatRaster","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/example_mask.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an example mask within a given raster — example_mask","text":"","code":"example_mask(example_raster(), pc_threshold=0.5) #> class       : SpatRaster  #> dimensions  : 10, 10, 1  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 0, 10, 0, 10  (xmin, xmax, ymin, ymax) #> coord. ref. :   #> source(s)   : memory #> name        :   example  #> min value   : 0.8193747  #> max value   : 7.3352526"},{"path":"https://idem-lab.github.io/sdmtools/reference/example_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"Create example raster for use in examples — example_raster","title":"Create example raster for use in examples — example_raster","text":"Create example raster use examples","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/example_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create example raster for use in examples — example_raster","text":"","code":"example_raster(seed = NULL, layername = NULL)"},{"path":"https://idem-lab.github.io/sdmtools/reference/example_raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create example raster for use in examples — example_raster","text":"seed seed pass set.seed(seed) layername character layer name passed names","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/example_raster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create example raster for use in examples — example_raster","text":"SpatRaster.","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/example_raster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create example raster for use in examples — example_raster","text":"","code":"example_raster() #> class       : SpatRaster  #> dimensions  : 10, 10, 1  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 0, 10, 0, 10  (xmin, xmax, ymin, ymax) #> coord. ref. :   #> source(s)   : memory #> name        :   example  #> min value   : 0.0627102  #> max value   : 7.3352526   example_raster(   seed = 3.142,   layername = \"jabberwock_density\" ) #> class       : SpatRaster  #> dimensions  : 10, 10, 1  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 0, 10, 0, 10  (xmin, xmax, ymin, ymax) #> coord. ref. :   #> source(s)   : memory #> name        : jabberwock_density  #> min value   :          0.1037884  #> max value   :          5.6719627"},{"path":"https://idem-lab.github.io/sdmtools/reference/example_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an example vector — example_vector","title":"Create an example vector — example_vector","text":"Create example vector","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/example_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an example vector — example_vector","text":"","code":"example_vector(seed = NULL)"},{"path":"https://idem-lab.github.io/sdmtools/reference/example_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an example vector — example_vector","text":"seed seed pass set.seed(seed)","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/example_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an example vector — example_vector","text":"SpatVector","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/example_vector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an example vector — example_vector","text":"","code":"example_vector() #>  class       : SpatVector  #>  geometry    : points  #>  dimensions  : 10, 0  (geometries, attributes) #>  extent      : 0.2293562, 8.00672, 1.375653, 8.951683  (xmin, xmax, ymin, ymax) #>  coord. ref. :"},{"path":"https://idem-lab.github.io/sdmtools/reference/extract_covariates.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract data from covariate rasters — extract_covariates","title":"Extract data from covariate rasters — extract_covariates","text":"Extracts data raster covariate layers modelling.","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/extract_covariates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract data from covariate rasters — extract_covariates","text":"","code":"extract_covariates(   covariates,   presences = NULL,   absences = NULL,   presences_and_absences = NULL )"},{"path":"https://idem-lab.github.io/sdmtools/reference/extract_covariates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract data from covariate rasters — extract_covariates","text":"covariates SpatRaster object one layers. presences data.frame tibble presence locations contaning longitude latitude variables x y. absences data.frame tibble absence background locations contaning longitude latitude variables x y. presences_and_absences data.frame tibble presence presence absence locations containing longitude latitude variables x y.","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/extract_covariates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract data from covariate rasters — extract_covariates","text":"tibble containing values variables presence covariate layers location.","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/extract_covariates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract data from covariate rasters — extract_covariates","text":"extract_covariates run correctly either presences , presences absences, presences_and_absences . (three included ignore last one).","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/extract_covariates.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract data from covariate rasters — extract_covariates","text":"Gerry Ryan","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/extract_covariates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract data from covariate rasters — extract_covariates","text":"","code":"library(terra) #> terra 1.8.5  cov1 <- example_raster(  seed = -44,  layername = \"cov1\" ) cov2 <- example_raster(  seed = 15.3,  layername = \"cov2\" )  covs <- c(cov1, cov2)   presences <- example_vector(seed = 68) %>%  as.data.frame(geom = \"xy\") absences <- example_vector(seed = 9.6) %>%  as.data.frame(geom = \"xy\")  extract_covariates(  covariates = covs,  presences = presences,  absences = absences ) #> # A tibble: 20 × 3 #>     cov1  cov2 presence #>    <dbl> <dbl>    <dbl> #>  1 0.345 0.799        1 #>  2 2.92  0.477        1 #>  3 0.200 2.06         1 #>  4 0.172 0.313        1 #>  5 1.06  2.12         1 #>  6 1.41  0.265        1 #>  7 2.40  0.153        1 #>  8 1.70  4.30         1 #>  9 0.230 4.26         1 #> 10 1.70  4.30         1 #> 11 0.483 1.39         0 #> 12 0.487 0.341        0 #> 13 0.563 4.11         0 #> 14 1.31  2.08         0 #> 15 1.90  3.51         0 #> 16 1.70  4.30         0 #> 17 1.04  1.60         0 #> 18 1.55  0.630        0 #> 19 0.487 0.717        0 #> 20 4.01  4.72         0"},{"path":"https://idem-lab.github.io/sdmtools/reference/global_regions.html","id":null,"dir":"Reference","previous_headings":"","what":"Global regions — global_regions","title":"Global regions — global_regions","text":"table showing United Nations Regional groups Member States World Health Organisation regions nation states states Officially Assigned ISO3166 Alpha-3 country codes.","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/global_regions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Global regions — global_regions","text":"","code":"global_regions"},{"path":[]},{"path":"https://idem-lab.github.io/sdmtools/reference/global_regions.html","id":"global-regions-a-tibble-with-rows-and-columns-","dir":"Reference","previous_headings":"","what":"global_regions A tibble with 249 rows and 6 columns:","title":"Global regions — global_regions","text":"country Country name. Given name conflicts two data sources, names identified country defined countrycode::countrycode(global_regions$iso3, origin = \"iso3c\", destination = \"country.name\") iso2, iso3 Alpha-2 & Alpha-3 ISO3166 country codes who_region World Health Organisation region un_region United Nations Regional group Member States continent Continent","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/global_regions.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Global regions — global_regions","text":"Table combined un-regions.csv, -regions.csv, housed package data-raw directory. un-regions.csv manually created tables \"Regional groups Member States\" https://www.un.org/dgacm/en/content/regional-groups 2024-02-02 -regions.csv downloaded https://ourworldindata.org/grapher/-regions 2024-02-02 World Health Organization – processed World Data & World Health Organization. continent defined countrycode::codelist$continent, (largely?) World Bank.","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/global_regions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Global regions — global_regions","text":"Includes Officially Assigned ISO3166 Alpha-3 country codes. 'countries' include continent. Special cases UN regional groupings Israel May 2000, Israel became full member Group Western European States temporary basis (subject renewal), thereby enabling put forward candidates election various bodies General Assembly. 2004, Israel obtained permanent renewal membership. Kiribati 2010, Kiribati (geographically Oceania) member regional group, despite Oceania nations belonging Group Asia-Pacific States. Türkiye Türkiye participates fully Group Western European States Group Asia-Pacific States, electoral purposes considered member Group Western European States . Türkiye listed groupings original dataset; remove duplication list voting member, .e., Western European States United States America United States America member regional group, attends meetings Group Western European States observer considered member group electoral purposes.","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/import_rasts.html","id":null,"dir":"Reference","previous_headings":"","what":"Import rasters from directory — import_rasts","title":"Import rasters from directory — import_rasts","text":"Imports rasters given extension type specified directory using terra::rast. Based seegSDM::importRasters.","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/import_rasts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import rasters from directory — import_rasts","text":"","code":"import_rasts(path, ext = \".grd\", as_list = FALSE)"},{"path":"https://idem-lab.github.io/sdmtools/reference/import_rasts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import rasters from directory — import_rasts","text":"path Directory path containing rasters ext Extension type as_list logical spatRaster objects returned list (TRUE) concatenated layers single SpatRaster object (FALSE; default)","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/import_rasts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import rasters from directory — import_rasts","text":"SpatRaster as_list = FALSE, list SpatRaster objects.","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/import_rasts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import rasters from directory — import_rasts","text":"","code":"if (FALSE) { # \\dontrun{   rasters <- import_rasts(\"/data/grids/covariates\") } # }"},{"path":"https://idem-lab.github.io/sdmtools/reference/inside_mask.html","id":null,"dir":"Reference","previous_headings":"","what":"title — inside_mask","title":"title — inside_mask","text":"Checks whether longitude latitude coincide non-missing pixels raster. function takes two arguments: points, dataframe containing minimum columns named longitude' 'latitude' (include attributes), mask raster. Returns dataframe dimensions input object, containing rows points falling non-missing pixels. points fall missing pixels, function throws error.","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/inside_mask.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"title — inside_mask","text":"","code":"inside_mask(points, mask)"},{"path":"https://idem-lab.github.io/sdmtools/reference/inside_mask.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"title — inside_mask","text":"points dataframe containing columns named 'longitude' 'latitude' mask raster","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/inside_mask.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"title — inside_mask","text":"dataframe longitude latitude rows points falling non-missing pixels. points fall missing pixels, function throws error.","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/make_mask.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Mask — make_mask","title":"Make Mask — make_mask","text":"Makes SpatRaster SpatVector mask layer countries, based shapefiles malaraAtlas package.","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/make_mask.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Mask — make_mask","text":"","code":"make_mask(   filename = NULL,   type = c(\"raster\", \"vector\"),   res = c(\"high\", \"low\"),   countries = NULL,   overwrite = FALSE )"},{"path":"https://idem-lab.github.io/sdmtools/reference/make_mask.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Mask — make_mask","text":"filename Character file path name  mask written disc. type Character raster vector; return mask either SpatRaster SpatVector. res Character \"high\" \"low\"; corresponding resolution 0.008333333 0.04166667 decimal degrees countries Character ISO3 country names. NULL returns countries Africa. overwrite logical","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/make_mask.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make Mask — make_mask","text":"SpatRaster SpatVector WGS 84 (EPSG:4326).","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/make_mask.html","id":"standard-usage-make-mask-filename-null-type-c-raster-","dir":"Reference","previous_headings":"","what":"standard usage make_mask(filename = NULL, type = c(\"raster\",","title":"Make Mask — make_mask","text":"\"vector\"), res = c(\"high\", \"low\"), countries = NULL) make_africa_mask deprecated, intended backward compatibility. simple alias make_mask: make_africa_mask(filename = NULL, type = c(\"raster\", \"vector\"), res = c(\"high\", \"low\"), countries = NULL) make_vector_mask sets type = \"vector\": make_mask(filename = NULL, type = \"vector\", res =' c(\"high\", \"low\"), countries = NULL)","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/make_mask.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make Mask — make_mask","text":"","code":"if (FALSE) { # \\dontrun{ # Create an object in workspace africa_mask_v <- make_mask(type = \"vector\")  # Save to disk make_mask(filename = \"africa_mask.tif\", type = \"raster\")  # or do both at once africa_mask_r <- make_africa_mask(\"africa_mask.tif\") } # }"},{"path":"https://idem-lab.github.io/sdmtools/reference/make_mpp_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Make presence-only list for multispeciesPP — make_mpp_list","title":"Make presence-only list for multispeciesPP — make_mpp_list","text":"Make presence-list multispeciesPP","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/make_mpp_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make presence-only list for multispeciesPP — make_mpp_list","text":"","code":"make_mpp_list(x, id)"},{"path":"https://idem-lab.github.io/sdmtools/reference/make_mpp_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make presence-only list for multispeciesPP — make_mpp_list","text":"x data.frame containing covariate bias values locations, identity (species) column id name identity column tidyselect form. id must column name x.","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/make_mpp_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make presence-only list for multispeciesPP — make_mpp_list","text":"named list data frames.","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/make_mpp_list.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make presence-only list for multispeciesPP — make_mpp_list","text":"package multispeciesPP requires annoying named list format presence-data. function takes table covariate / bias values ID column (.e. species), returns named list element values corresponding identity . Ugh.","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/make_mpp_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make presence-only list for multispeciesPP — make_mpp_list","text":"","code":"if (FALSE) { # \\dontrun{ make_mpp_list(presence_only_data, species) } # }"},{"path":"https://idem-lab.github.io/sdmtools/reference/mask_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Mask all — mask_all","title":"Mask all — mask_all","text":"Masks NA cells across layers, returned layers matching NA cells.","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/mask_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mask all — mask_all","text":"","code":"mask_all(rasts, filename = NULL, overwrite = FALSE)"},{"path":"https://idem-lab.github.io/sdmtools/reference/mask_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mask all — mask_all","text":"rasts SpatRaster nlyr(rasts) > 1 mask filename characterto save output overwrite logical overwrite existing filename?","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/mask_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mask all — mask_all","text":"SpatRaster","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/mask_all.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mask all — mask_all","text":"Uses ton RAM break larger rasters.","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/mask_all.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mask all — mask_all","text":"","code":"# Create some SpatRaster layers with non-matching NA cells library(terra) library(sdmtools)  r <- c(   example_raster(seed = 1),   example_raster(seed = 2),   example_raster(seed = 3) ) rvals <- terra::values(r) nas <- c(1:10, 105:120, 215:240) rvals[nas] <- NA r[] <- rvals  # check if it pleases you to do so # plot(r) # mask out non-overlapping `NA` values in all layers s <- mask_all(r) s #> class       : SpatRaster  #> dimensions  : 10, 10, 3  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 0, 10, 0, 10  (xmin, xmax, ymin, ymax) #> coord. ref. :   #> source(s)   : memory #> names       :   example,    example,   example  #> min values  : 0.1644813, 0.08614646, 0.1037884  #> max values  : 8.7811877, 7.32227034, 3.9045514   # plot(s)"},{"path":"https://idem-lab.github.io/sdmtools/reference/mask_from_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Create mask from raster layers — mask_from_all","title":"Create mask from raster layers — mask_from_all","text":"Creates mask cell layer r NA returned NA.","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/mask_from_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create mask from raster layers — mask_from_all","text":"","code":"mask_from_all(r)"},{"path":"https://idem-lab.github.io/sdmtools/reference/mask_from_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create mask from raster layers — mask_from_all","text":"r SpatRaster >1 layer.","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/mask_from_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create mask from raster layers — mask_from_all","text":"SpatRaster values NA 1.","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/mask_from_all.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create mask from raster layers — mask_from_all","text":"Similar intention mask_all, () work larger rasters holds values single layer memory time, (b) returns mask layer, rather masking layer r. Can slow","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/mask_from_all.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create mask from raster layers — mask_from_all","text":"","code":"r <- example_raster(seed = 10) s <- example_raster(seed = 11)  r[10:20] <- NA  s[5:15] <- NA  q <- mask_from_all(c(r,s))  library(\"terra\") plot(c(r,s,q))"},{"path":"https://idem-lab.github.io/sdmtools/reference/maskpointsdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — maskpointsdf","title":"Title — maskpointsdf","text":"Title","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/maskpointsdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — maskpointsdf","text":"","code":"maskpointsdf(df, msk)"},{"path":"https://idem-lab.github.io/sdmtools/reference/maskpointsdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — maskpointsdf","text":"df data.frame msk mask","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/maskpointsdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — maskpointsdf","text":"tibble two columsn, lon lat","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/match_ref.html","id":null,"dir":"Reference","previous_headings":"","what":"match ref — match_ref","title":"match ref — match_ref","text":"Crop, resample, mask x ref, optionally replace missing values.","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/match_ref.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"match ref — match_ref","text":"","code":"match_ref(x, ref, missing_val = NULL, filename = NULL, overwrite = TRUE)"},{"path":"https://idem-lab.github.io/sdmtools/reference/match_ref.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"match ref — match_ref","text":"x SpatRaster object bash shape ref SpatRaster reference object missing_val NULL missing value left . Otherwise NA NaN values x NA ref replaced missing_val filename NULL output written filename overwrite logical. filename NULL, TRUE, filename overwritten.","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/match_ref.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"match ref — match_ref","text":"SpatRaster nlyrs(x) trimmed extent resolution ref.","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/match_ref.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"match ref — match_ref","text":"","code":"#placeholder example"},{"path":"https://idem-lab.github.io/sdmtools/reference/nearest_land.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify nearest land — nearest_land","title":"Identify nearest land — nearest_land","text":"Adapted seegSDM Identify closest neighbouring cell return NA raster mask","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/nearest_land.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify nearest land — nearest_land","text":"","code":"nearest_land(points, raster, max_distance)"},{"path":"https://idem-lab.github.io/sdmtools/reference/nearest_land.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify nearest land — nearest_land","text":"points anything terra::extract() accepts y argument raster raster max_distance map units raster projected","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/nearest_land.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify nearest land — nearest_land","text":"matrix XY coordinates nearest cell mask, NAs","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/new_long_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"long_tibble constructor function — new_long_tibble","title":"long_tibble constructor function — new_long_tibble","text":"long_tibble constructor function","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/new_long_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"long_tibble constructor function — new_long_tibble","text":"","code":"new_long_tibble(x)"},{"path":"https://idem-lab.github.io/sdmtools/reference/new_long_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"long_tibble constructor function — new_long_tibble","text":"x tbl_df object.","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/new_long_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"long_tibble constructor function — new_long_tibble","text":"long_tibble.","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://idem-lab.github.io/sdmtools/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/predict_mpp_rast.html","id":null,"dir":"Reference","previous_headings":"","what":"Raster predictions from multispeciesPP — predict_mpp_rast","title":"Raster predictions from multispeciesPP — predict_mpp_rast","text":"Make spatial predictions multispeciesPP::predict.multispeciesPP passing data terra::SpatRaster layers returning SpatRaster.","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/predict_mpp_rast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Raster predictions from multispeciesPP — predict_mpp_rast","text":"","code":"predict_mpp_rast(   model,   data,   sp,   type = c(\"response\", \"link\"),   filename = NULL,   overwrite = FALSE )"},{"path":"https://idem-lab.github.io/sdmtools/reference/predict_mpp_rast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Raster predictions from multispeciesPP — predict_mpp_rast","text":"model multispeciesPP model object data SpatRaster object covariate bias layers sp character Species name predict type character. Prediction scale — \"response\" \"link\". filename characterto save output overwrite logical overwrite existing filename?","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/predict_mpp_rast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Raster predictions from multispeciesPP — predict_mpp_rast","text":"SpatRaster","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/predict_mpp_rast_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Raster predictions from multispeciesPP for all species — predict_mpp_rast_all","title":"Raster predictions from multispeciesPP for all species — predict_mpp_rast_all","text":"Calls sdmtools::predict_mpp_rast species model","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/predict_mpp_rast_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Raster predictions from multispeciesPP for all species — predict_mpp_rast_all","text":"","code":"predict_mpp_rast_all(   model,   data,   type = c(\"response\", \"link\"),   filename = NULL,   overwrite = FALSE )"},{"path":"https://idem-lab.github.io/sdmtools/reference/predict_mpp_rast_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Raster predictions from multispeciesPP for all species — predict_mpp_rast_all","text":"model multispeciesPP model object data SpatRaster object covariate bias layers type character. Prediction scale — \"response\" \"link\". filename characterto save output overwrite logical overwrite existing filename?","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/predict_mpp_rast_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Raster predictions from multispeciesPP for all species — predict_mpp_rast_all","text":"SpatRaster","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/predict_sdm.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict Species Distribution Model — predict_sdm","title":"Predict Species Distribution Model — predict_sdm","text":"Produces raster prediction SDM based model covariate layers.","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/predict_sdm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict Species Distribution Model — predict_sdm","text":"","code":"predict_sdm(   model,   covariates,   type = NULL,   layer_name = \"predicted_distribution\" )"},{"path":"https://idem-lab.github.io/sdmtools/reference/predict_sdm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict Species Distribution Model — predict_sdm","text":"model model object. covariates SpatRaster covariate layers. type Scale prediction (response, model, etc.). layer_name Name predicted layer.","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/predict_sdm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict Species Distribution Model — predict_sdm","text":"SpatRaster prediction model","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/predict_sdm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict Species Distribution Model — predict_sdm","text":"","code":"if (FALSE) { # \\dontrun{   m <- glm(z ~ cov1, cov2, data = sdm_data)    prediction <- predict_sdm(m, covs)  } # }"},{"path":"https://idem-lab.github.io/sdmtools/reference/print.long_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for class long_tibble — print.long_tibble","title":"Print method for class long_tibble — print.long_tibble","text":"Prints data tables stored sdmtools entire length*, maintains nice print features tbl_df, .e., tibbles.","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/print.long_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for class long_tibble — print.long_tibble","text":"","code":"# S3 method for class 'long_tibble' print(x, ...)"},{"path":"https://idem-lab.github.io/sdmtools/reference/print.long_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for class long_tibble — print.long_tibble","text":"x object class long_tibble. ... extra arguments printing","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/print.long_tibble.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print method for class long_tibble — print.long_tibble","text":"*\"entire length\" — well really, 999 lines, none currently .","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/print.long_tibble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print method for class long_tibble — print.long_tibble","text":"","code":"print(raster_to_terra) #> # A tibble: 42 × 3 #>    raster                        terra               comment                     #>    <chr>                         <chr>               <chr>                       #>  1 raster, brick, stack          rast                 NA                         #>  2 rasterFromXYZ                 rast(, type='xyz')  \"note arg `type = xyz`\"     #>  3 stack, addLayer               c                    NA                         #>  4 addLayer                      add<-                NA                         #>  5 area                          cellSize or expanse  NA                         #>  6 approxNA                      approximate          NA                         #>  7 calc                          app                 \"think apply family, i.e.,… #>  8 cellFromLine, cellFromPolygon cells                NA                         #>  9 cellsFromExtent               cells                NA                         #> 10 cellStats                     global              \"global returns df not vec… #> 11 clump                         patches              NA                         #> 12 compareRaster                 compareGeom          NA                         #> 13 corLocal                      focalPairs           NA                         #> 14 coordinates                   crds                 NA                         #> 15 couldBeLonLat                 is.lonlat            NA                         #> 16 crop                          crop                 NA                         #> 17 disaggregate                  disagg               NA                         #> 18 distanceFromPoints            distance             NA                         #> 19 drawExtent                    draw                 NA                         #> 20 dropLayer                     subset               NA                         #> 21 extent                        ext                  NA                         #> 22 extract                       extract             \"cellnumbers in raster bec… #> 23 getValues                     values              \"as.vector an alternative … #> 24 isLonLat, isGlobalLonLat      is.lonlat            NA                         #> 25 layerize                      segregate            NA                         #> 26 layerStats                    layerCor             NA                         #> 27 movingFun                     roll                 NA                         #> 28 NAvalue                       NAflag               NA                         #> 29 nlayers                       nlyr                 NA                         #> 30 overlay                       lapp                 NA                         #> 31 projectRaster                 project              NA                         #> 32 plot                          plot                \"maxpixels in raster becom… #> 33 rasterToPoints                as.points            NA                         #> 34 rasterToPolygons              as.polygons          NA                         #> 35 reclassify, subs, cut         classify             NA                         #> 36 resample                      resample             NA                         #> 37 sampleRandom, sampleRegular   spatSample           NA                         #> 38 shapefile                     vect                 NA                         #> 39 stackApply                    tapp                 NA                         #> 40 stackSelect                   selectRange          NA                         #> 41 unstack                       as.list              NA                         #> 42 writeRaster                   writeRaster         \"need to specify file type…"},{"path":"https://idem-lab.github.io/sdmtools/reference/raster_to_terra.html","id":null,"dir":"Reference","previous_headings":"","what":"raster to terra equivalence table — raster_to_terra","title":"raster to terra equivalence table — raster_to_terra","text":"table equivalent functions (near equivalent) raster terra packages.","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/raster_to_terra.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"raster to terra equivalence table — raster_to_terra","text":"","code":"raster_to_terra"},{"path":[]},{"path":"https://idem-lab.github.io/sdmtools/reference/raster_to_terra.html","id":"global-regions-a-tibble-with-rows-and-columns-","dir":"Reference","previous_headings":"","what":"global_regions A tibble with 42 rows and 3 columns:","title":"raster to terra equivalence table — raster_to_terra","text":"raster function name raster terra function name terra comment Annotations differences arguments usage, etc.","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/raster_to_terra.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"raster to terra equivalence table — raster_to_terra","text":"Initially produced Gerry Ryan supplemented \"New method names\" section https://cran.r-project.org/web/packages/terra/terra.pdf, annotations added IDEM members","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/raster_to_terra.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"raster to terra equivalence table — raster_to_terra","text":"argument names may differ.","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/rastpointplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Raster plot with points — rastpointplot","title":"Raster plot with points — rastpointplot","text":"Simple convenience function plot points raster. Useful quick data checks.","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/rastpointplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Raster plot with points — rastpointplot","text":"","code":"rastpointplot(r, v, pch = 16, cex = 0.5)"},{"path":"https://idem-lab.github.io/sdmtools/reference/rastpointplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Raster plot with points — rastpointplot","text":"r spatRaster object v spatVector object pch integer  point symbol. See ?par cex numeric point size multiplier. See ?par","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/rastpointplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Raster plot with points — rastpointplot","text":"graphical plot","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/rastpointplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Raster plot with points — rastpointplot","text":"","code":"r <- example_raster() v <- example_vector() rastpointplot(r,v)"},{"path":"https://idem-lab.github.io/sdmtools/reference/save_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Save plot — save_plot","title":"Save plot — save_plot","text":"Single line wrapper save plot png","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/save_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save plot — save_plot","text":"","code":"save_plot(   p,   filename,   width = 2400,   height,   units = c(\"px\", \"cm\", \"mm\"),   res = 300 )"},{"path":"https://idem-lab.github.io/sdmtools/reference/save_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save plot — save_plot","text":"p plot object filename character save plot width units height units. missing, height scaled width golden ratio. units Units width height. \"px\" — pixels, default, \"cm\", \"mm\". \"\" allowed principle. res resolution, default 300px","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/save_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save plot — save_plot","text":"nothing. Writes plot filename","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/save_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save plot — save_plot","text":"","code":"if (FALSE) { # \\dontrun{  lovely_plot <- plot(1:10) # why use three lines png(\"lovely_plot.png\") lovely_plot dev.off()  #when you could use one save_plot(p = lovely_plot, \"lovely_plot.png\")  } # }"},{"path":"https://idem-lab.github.io/sdmtools/reference/sdmtools-package.html","id":null,"dir":"Reference","previous_headings":"","what":"sdmtools: Utility tools for Species Distribution Modelling — sdmtools-package","title":"sdmtools: Utility tools for Species Distribution Modelling — sdmtools-package","text":"package (one paragraph).","code":""},{"path":[]},{"path":"https://idem-lab.github.io/sdmtools/reference/sdmtools-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"sdmtools: Utility tools for Species Distribution Modelling — sdmtools-package","text":"Maintainer: Gerry Ryan gerard.ryan@telethonkids.org.au (ORCID) contributors: David Duncan [contributor] Nick Tierney [contributor]","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/set_layer_names.html","id":null,"dir":"Reference","previous_headings":"","what":"set layer names — set_layer_names","title":"set layer names — set_layer_names","text":"Convenience function setting SpatRaster layer names, enables setting piped workflows.","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/set_layer_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"set layer names — set_layer_names","text":"","code":"set_layer_names(x, layernames)"},{"path":"https://idem-lab.github.io/sdmtools/reference/set_layer_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"set layer names — set_layer_names","text":"x SpatRaster layernames character length nlyr(x)","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/set_layer_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"set layer names — set_layer_names","text":"SpatRaster","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/set_layer_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"set layer names — set_layer_names","text":"","code":"example_raster() |>  set_layer_names(\"Charlie Watts\") #> class       : SpatRaster  #> dimensions  : 10, 10, 1  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 0, 10, 0, 10  (xmin, xmax, ymin, ymax) #> coord. ref. :   #> source(s)   : memory #> name        : Charlie Watts  #> min value   :     0.0627102  #> max value   :     7.3352526"},{"path":"https://idem-lab.github.io/sdmtools/reference/set_levels.html","id":null,"dir":"Reference","previous_headings":"","what":"set levels — set_levels","title":"set levels — set_levels","text":"Convenience function setting SpatRaster levels names enable setting piped workflows.","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/set_levels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"set levels — set_levels","text":"","code":"set_levels(x, levs)"},{"path":"https://idem-lab.github.io/sdmtools/reference/set_levels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"set levels — set_levels","text":"x SpatRaster levs data.frame","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/set_levels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"set levels — set_levels","text":"SpatRaster","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/set_levels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"set levels — set_levels","text":"","code":"if (FALSE) { # \\dontrun{ categorical_raster |>  set_levels(   levs = tribble(     ~value, ~category,     30, \"URBAN CENTRE\",     23, \"DENSE URBAN CLUSTER\",     22, \"SEMI-DENSE URBAN CLUSTER\",     21, \"SUBURBAN OR PERI-URBAN\",     13, \"RURAL CLUSTER\",     12, \"LOW DENSITY RURAL\",     11, \"VERY LOW DENSITY RURAL\",     10, \"WATER\"    )   ) %>%     as.data.frame() } # }"},{"path":"https://idem-lab.github.io/sdmtools/reference/source_R.html","id":null,"dir":"Reference","previous_headings":"","what":"Source all R scripts in a directory — source_R","title":"Source all R scripts in a directory — source_R","text":"Sources scripts specified directory optionally prints paths.","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/source_R.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Source all R scripts in a directory — source_R","text":"","code":"source_R(path = \"R\", print.names = TRUE)"},{"path":"https://idem-lab.github.io/sdmtools/reference/source_R.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Source all R scripts in a directory — source_R","text":"path Path directory; default  /R. print.names Print path name sourced scripts. Default TRUE.","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/source_R.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Source all R scripts in a directory — source_R","text":"Scripts sourced local environment. NULL returned.","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/source_R.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Source all R scripts in a directory — source_R","text":"","code":"if (FALSE) { # \\dontrun{   source_R(\"/Users/frankenstein/project/R\") } # }"},{"path":"https://idem-lab.github.io/sdmtools/reference/split_rast.html","id":null,"dir":"Reference","previous_headings":"","what":"Split rasters — split_rast","title":"Split rasters — split_rast","text":"Split rasters","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/split_rast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split rasters — split_rast","text":"","code":"split_rast(x, grain = 4, write_temp = FALSE)"},{"path":"https://idem-lab.github.io/sdmtools/reference/split_rast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split rasters — split_rast","text":"x SpatRaster grain Grain splitting. write_temp write tempfile. Default FALSE","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/split_rast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split rasters — split_rast","text":"list SpatRasters length grain^2.","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/split_rast.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Split rasters — split_rast","text":"Splits SpatRaster grain^2 list approximately equal geographic sized rasters covering extent  x","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/split_rast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split rasters — split_rast","text":"","code":"# Split a raster into four library(terra) r <- example_raster() s <- split_rast(r, grain = 2) s #> [[1]] #> class       : SpatRaster  #> dimensions  : 5, 5, 1  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 0, 5, 0, 5  (xmin, xmax, ymin, ymax) #> coord. ref. :   #> source(s)   : memory #> name        :   example  #> min value   : 0.1587361  #> max value   : 7.3352526  #>  #> [[2]] #> class       : SpatRaster  #> dimensions  : 5, 5, 1  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 0, 5, 5, 10  (xmin, xmax, ymin, ymax) #> coord. ref. :   #> source(s)   : memory #> name        :   example  #> min value   : 0.1028045  #> max value   : 4.0001839  #>  #> [[3]] #> class       : SpatRaster  #> dimensions  : 5, 5, 1  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 5, 10, 0, 5  (xmin, xmax, ymin, ymax) #> coord. ref. :   #> source(s)   : memory #> name        :    example  #> min value   : 0.09802478  #> max value   : 3.23820739  #>  #> [[4]] #> class       : SpatRaster  #> dimensions  : 5, 5, 1  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 5, 10, 5, 10  (xmin, xmax, ymin, ymax) #> coord. ref. :   #> source(s)   : memory #> name        :   example  #> min value   : 0.0627102  #> max value   : 5.7145289  #>   # plot with original  ps <- lapply(    s,    FUN = extend,    y = r  ) |>    rast()   c(r, ps) |>  plot()"},{"path":"https://idem-lab.github.io/sdmtools/reference/standardise_rast.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardise Raster — standardise_rast","title":"Standardise Raster — standardise_rast","text":"Defunct. USE FUNCTION; use terra::scale instead","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/standardise_rast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardise Raster — standardise_rast","text":"","code":"standardise_rast(x)"},{"path":"https://idem-lab.github.io/sdmtools/reference/standardise_rast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardise Raster — standardise_rast","text":"x SpatRaster object.","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/standardise_rast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardise Raster — standardise_rast","text":"SpatRaster objects mean zero standard deviation one.","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/standardise_rast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standardise Raster — standardise_rast","text":"","code":"if (FALSE) { # \\dontrun{ r <- example_raster()  standardise_rast(r) } # }"},{"path":"https://idem-lab.github.io/sdmtools/reference/std_rast.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardise raster — std_rast","title":"Standardise raster — std_rast","text":"Standardises layers SpatRaster scale 0-1, dividing maximum value layer. operates layer","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/std_rast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardise raster — std_rast","text":"","code":"std_rast(x, reverse = FALSE, filename = NULL, overwrite = TRUE)"},{"path":"https://idem-lab.github.io/sdmtools/reference/std_rast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardise raster — std_rast","text":"x SpatRaster standardise reverse logical TRUE subtract standardised values 1 filename Optional character path filename write output overwrite logical TRUE overwrite filename","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/std_rast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardise raster — std_rast","text":"SpatRaster range 0-1","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/std_rast.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Standardise raster — std_rast","text":"break non-numeric rasters","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/std_rast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standardise raster — std_rast","text":"","code":"example_raster(seed = 3010) |>   std_rast(reverse = TRUE) #> class       : SpatRaster  #> dimensions  : 10, 10, 1  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 0, 10, 0, 10  (xmin, xmax, ymin, ymax) #> coord. ref. :   #> source(s)   : memory #> name        :   example  #> min value   : 0.0000000  #> max value   : 0.9897896"},{"path":"https://idem-lab.github.io/sdmtools/reference/temptif.html","id":null,"dir":"Reference","previous_headings":"","what":"temptif — temptif","title":"temptif — temptif","text":"Returns temporary file *.tif extenstion","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/temptif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"temptif — temptif","text":"","code":"temptif()"},{"path":"https://idem-lab.github.io/sdmtools/reference/temptif.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"temptif — temptif","text":"character","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/temptif.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"temptif — temptif","text":"","code":"temptif() #> [1] \"/tmp/RtmpYgnr4M/file19fe357980d7.tif\""},{"path":"https://idem-lab.github.io/sdmtools/reference/writereadrast.html","id":null,"dir":"Reference","previous_headings":"","what":"Write and read back spatRaster — writereadrast","title":"Write and read back spatRaster — writereadrast","text":"new terra::SpatRaster created stored memory. Writing disc reading object back file requires two steps: terra::writeRaster reading re-assigning via terra::rast. writereadrast wraps single step.","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/writereadrast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write and read back spatRaster — writereadrast","text":"","code":"writereadrast(x, filename, overwrite = TRUE, layernames = NULL)"},{"path":"https://idem-lab.github.io/sdmtools/reference/writereadrast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write and read back spatRaster — writereadrast","text":"x terra::SpatRaster filename character file path name save x disc. overwrite logical; overwrite existing raster. NB: default, overwrite = TRUE, opposite default behaviour terra::writeRaster layernames character length nlyr(x)","code":""},{"path":"https://idem-lab.github.io/sdmtools/reference/writereadrast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write and read back spatRaster — writereadrast","text":"terra::SpatRaster object reading disc filename.","code":""},{"path":[]}]
